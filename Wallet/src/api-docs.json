{
  "openapi": "3.0.0",
  "info": {
    "title": "Microservice Wallet",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "Transactions"
    }
  ],
  "paths": {
    "/transactions": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transactions"
              }
            }
          }
        },
        "tags": ["Transactions"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsModel"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["Transactions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": ["CREDIT", "DEBIT"]
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "min": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "min": 1
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["ASC", "DESC"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "limit": { "type": "integer", "example": 20 },
                    "hasPrevPage": { "type": "boolean", "example": false },
                    "hasNextPage": { "type": "boolean", "example": false },
                    "hasMore": { "type": "boolean", "example": false },
                    "totalDocs": { "type": "integer", "example": 1 },
                    "totalPages": { "type": "integer", "example": 1 },
                    "page": { "type": "integer", "example": 1 },
                    "pagingCounter": { "type": "integer", "example": 1 },
                    "docs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TransactionsModel"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/balance": {
      "get": {
        "description": "Esse endpoint deve retornar um consolidado das transações de CREDITO e DEBITO, fazendo o calculo do valor, de prefência que seja uma query fazendo o calculo",
        "tags": ["Transactions"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Transactions": {
        "type": "object",
        "required": ["user_id", "type", "amount"],
        "properties": {
          "user_id": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["CREDIT", "DEBIT"]
          }
        }
      },
      "TransactionsModel": {
        "type": "object",
        "required": ["user_id", "type", "amount"],
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["CREDIT", "DEBIT"]
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "default": "Missing authorization token."
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Invalid data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "default": "Validation Error: Invalid request."
                }
              }
            }
          }
        }
      }
    }
  }
}
